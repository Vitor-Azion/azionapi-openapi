openapi: 3.0.0
info:
  title: Storage API
  version: 1.0.0
  license:
    name: MIT
    url: https://github.com/aziontech/azionapi-openapi/blob/main/LICENSE.md
servers:
- description: Production
  url: https://storage-api.azion.com
security:
- tokenAuth: []
paths:
  /storage/{version_id}:
    post:
      summary: /domains/:version_id
      description: Upload file and transfer to remote storage
      parameters:
      - description: "Required in order to get the path and file name. i.e.: assets/css/main.css"
        explode: false
        in: header
        name: X-Azion-Static-Path
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          b2/x-auto:
            schema:
              format: binary
              type: string
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: ""
  /storage/{version_id}/delete:
    delete:
      summary: /domains/:version_id
      description: Delete a version. A version is just um path prefix/sub-namespace
        for a set of files.
      operationId: deleteVersion
      parameters:
      - description: The version identifier
        explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The resource was deleted successfully.
components:
  responses:
    "401":
      content:
        application/json:
          schema:
            properties:
              detail:
                type: string
            type: object
      description: Token/Personal Token has been expired or invalid
  schemas: {}
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: Authorization
      in: header
      description: |
        You must inform a token to auth.
        Usage format: `Token <TOKEN>`
